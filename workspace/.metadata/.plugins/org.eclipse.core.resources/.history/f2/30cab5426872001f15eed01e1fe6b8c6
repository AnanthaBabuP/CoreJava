package com.Functional_Programming;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Consumer;

public class Example {

	public static void main(String[] args) {
		Employee e1 = new Employee(1001, "Anandh", "Software Developer", 55000);
		Employee e2 = new Employee(1002, "Ganesh", "NW Engineer", 55000);
		Employee e3 = new Employee(1003, "Ravi", "Database Engineer", 38000.0);
		Employee e4 = new Employee(1004, "Sutha", "manager", 150000.0);
		Employee e5 = new Employee(1005, "Krishna", "Clerk", 28000.0);
		
//		Employee[] myEmployes = {e1,e2,e3,e4,e5};
		List<Employee> empList = new ArrayList<>();
		empList.add(e1);
		empList.add(e2);
		empList.add(e3);
		empList.add(e4);
		empList.add(e5);
		
		/* 1.Traditional Method
		 * for(Employee emp : empList) { System.out.println(emp); }
		 */
		
		// 2. Anonymous Inner CLass
		/*
		 * empList.forEach(new Consumer<Employee>() {
		 * 
		 * @Override public void accept(Employee e) { System.out.println(e);
		 * 
		 * }
		 * 
		 * });
		 */
		
		// 3. Lambda Expression
		empList.forEach((e)-> {System.out.println(e); });
		
		System.out.println();
		
		empList.forEach(System.out::println); // Method references
		
	}

}
